;; Analyzed by ClojureScript 1.8.51
{:use-macros nil, :excludes #{}, :name scrapfab.images, :imports nil, :requires {clojure.set clojure.set}, :uses {subset? clojure.set}, :defs {images {:name scrapfab.images/images, :file "src/scrapfab/images.cljs", :line 11, :column 1, :end-line 11, :end-column 12, :meta {:file "/Users/dmitry/programming/scrapfab/src/scrapfab/images.cljs", :line 11, :column 6, :end-line 11, :end-column 12}}, tagged? {:protocol-inline nil, :meta {:file "/Users/dmitry/programming/scrapfab/src/scrapfab/images.cljs", :line 92, :column 7, :end-line 92, :end-column 14, :arglists (quote ([tags media]))}, :name scrapfab.images/tagged?, :variadic false, :file "src/scrapfab/images.cljs", :end-column 14, :method-params ([tags media]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 92, :end-line 92, :max-fixed-arity 2, :fn-var true, :arglists (quote ([tags media]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:metal :tags :desc :src :rate :title :prop :set :sculpt}, :order [:title :desc :src :tags :metal :rate :sculpt :prop :set]}, :doc nil}