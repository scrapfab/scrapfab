;; Analyzed by ClojureScript 1.8.51
{:use-macros nil, :excludes #{}, :name scrapfab.menu, :imports nil, :requires nil, :uses nil, :defs {sub-url? {:protocol-inline nil, :meta {:file "/Users/dmitry/programming/scrapfab/src/scrapfab/menu.cljs", :line 3, :column 7, :end-line 3, :end-column 15, :arglists (quote ([parent-url url]))}, :name scrapfab.menu/sub-url?, :variadic false, :file "src/scrapfab/menu.cljs", :end-column 15, :method-params ([parent-url url]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 3, :end-line 3, :max-fixed-arity 2, :fn-var true, :arglists (quote ([parent-url url]))}, class-opts {:protocol-inline nil, :meta {:file "/Users/dmitry/programming/scrapfab/src/scrapfab/menu.cljs", :line 8, :column 7, :end-line 8, :end-column 17, :arglists (quote ([class]))}, :name scrapfab.menu/class-opts, :variadic false, :file "src/scrapfab/menu.cljs", :end-column 17, :method-params ([class]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([class]))}, brand-heading {:protocol-inline nil, :meta {:file "/Users/dmitry/programming/scrapfab/src/scrapfab/menu.cljs", :line 12, :column 7, :end-line 12, :end-column 20, :arglists (quote ([& {:keys [class brand]}])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [class brand]})], :arglists ([& {:keys [class brand]}]), :arglists-meta (nil)}}, :name scrapfab.menu/brand-heading, :variadic true, :file "src/scrapfab/menu.cljs", :end-column 20, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [class brand]})], :arglists ([& {:keys [class brand]}]), :arglists-meta (nil)}, :method-params [({:keys [class brand]})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 0, :fn-var true, :arglists ([& {:keys [class brand]}])}, horizontal-menu {:protocol-inline nil, :meta {:file "/Users/dmitry/programming/scrapfab/src/scrapfab/menu.cljs", :line 19, :column 7, :end-line 19, :end-column 22, :arglists (quote ([& {:keys [items current-id label-fn id-fn url-fn selected-fn on-change class brand], :or {label-fn (fn [item] (:label item)), id-fn (fn [item] (:id item)), selected-fn (fn [item] (= current-id (id-fn item))), url-fn (constantly "#")}}])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [items current-id label-fn id-fn url-fn selected-fn on-change class brand], :or {label-fn (fn [item] (:label item)), id-fn (fn [item] (:id item)), selected-fn (fn [item] (= current-id (id-fn item))), url-fn (constantly "#")}})], :arglists ([& {:keys [items current-id label-fn id-fn url-fn selected-fn on-change class brand], :or {label-fn (fn [item] (:label item)), id-fn (fn [item] (:id item)), selected-fn (fn [item] (= current-id (id-fn item))), url-fn (constantly "#")}}]), :arglists-meta (nil)}}, :name scrapfab.menu/horizontal-menu, :variadic true, :file "src/scrapfab/menu.cljs", :end-column 22, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [items current-id label-fn id-fn url-fn selected-fn on-change class brand], :or {label-fn (fn [item] (:label item)), id-fn (fn [item] (:id item)), selected-fn (fn [item] (= current-id (id-fn item))), url-fn (constantly "#")}})], :arglists ([& {:keys [items current-id label-fn id-fn url-fn selected-fn on-change class brand], :or {label-fn (fn [item] (:label item)), id-fn (fn [item] (:id item)), selected-fn (fn [item] (= current-id (id-fn item))), url-fn (constantly "#")}}]), :arglists-meta (nil)}, :method-params [({:keys [items current-id label-fn id-fn url-fn selected-fn on-change class brand], :or {label-fn (fn [item] (:label item)), id-fn (fn [item] (:id item)), selected-fn (fn [item] (= current-id (id-fn item))), url-fn (constantly "#")}})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 0, :fn-var true, :arglists ([& {:keys [items current-id label-fn id-fn url-fn selected-fn on-change class brand], :or {label-fn (fn [item] (:label item)), id-fn (fn [item] (:id item)), selected-fn (fn [item] (= current-id (id-fn item))), url-fn (constantly "#")}}])}, navigation {:protocol-inline nil, :meta {:file "/Users/dmitry/programming/scrapfab/src/scrapfab/menu.cljs", :line 52, :column 7, :end-line 52, :end-column 17, :arglists (quote ([& {:keys [current-url items class brand]}])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [current-url items class brand]})], :arglists ([& {:keys [current-url items class brand]}]), :arglists-meta (nil)}}, :name scrapfab.menu/navigation, :variadic true, :file "src/scrapfab/menu.cljs", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [current-url items class brand]})], :arglists ([& {:keys [current-url items class brand]}]), :arglists-meta (nil)}, :method-params [({:keys [current-url items class brand]})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 0, :fn-var true, :arglists ([& {:keys [current-url items class brand]}])}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:label-fn :current-id :key :ul.pure-menu-list :url-fn :id-fn :on-click :brand :li.pure-menu-item :div.pure-menu.pure-menu-horizontal :label :id :class :url :items :on-change :a.pure-menu-link :href :selected-fn :current-url :div.pure-menu-heading}, :order [:class :brand :div.pure-menu-heading :items :current-id :label-fn :label :id-fn :id :url-fn :selected-fn :on-change :div.pure-menu.pure-menu-horizontal :ul.pure-menu-list :li.pure-menu-item :a.pure-menu-link :href :on-click :key :current-url :url]}, :doc nil}